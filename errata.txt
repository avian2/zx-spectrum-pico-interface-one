v1.0
====

Transistor Q1 is rotated. Needs turning 90deg anticlockwise.
- Done on board #2

"ROM Acc 3V3" is on the silkscreen, test point was removed.
Same for "GND" just above U4.
- Done on board #2

The direction for the data bus level shifter needs to be
ROM_READ_INV, not /RD.
 - Cut ZXRD track on back of board #2
 - Picked up ROM_READ_INV from OR output (pin 9) and
   connected to DIR (pin 1) on level shifter U4
- Done on board #2
 
Move the GND via from pin 19 on U4, it's under the chip and
I can't get to it. This is /OE.
- Done on board #2

Remove level shifter U2
 - Bridged across gap on board #2
 - Removed on board #2

Remove level shifter U3
 - Bridged across gap on board #2
 - Removed on board #2

All the above were fixed (by hand) in v1.1


v1.1
====

Disconnect the 3V3s for all the Picos. I've got the outputs
of 3 regulators tied together. Separate into 3 supplies.
- Done on v1.2 of the board
- Cut 3V3 track to Pico2 on current board
: Need to cut 3v3 track to pico3 on current board

Change the level shifter direction control from hardware to
software. Wire GPIO27 of Pico2 as an input for the ROM_READ_INV
signal, and GPIO28 as an output to the data bus level shifter's DIR
pin. This will allow the data bus to reverse direction on
memory reads, and also on IO request reads.
- Done on board #2,

Remove the level shifter U202 which does IORQ, RD and WR.
These signals are permanently ZX->Pico so don't need shifting.
- Bridged on board #1

Untangle the bus pins on all the Picos. Make databus D0 to D7
in sequence, then address lines, then control bus lines. I
thought simplifying the layout process would make things easier,
but actually, keeping the software simple and fast has more
benefit.
: Needs doing
: Make sure the GPIOs which share the ADC are not used for 5V
: Won't be doing this on board #1


Connect the last GPIO #27 on the ROM pico to the level shifter's
DIR pin. This is so I can drive the direction with a PIO when the
ROM is read. Not sure if this will work, so make sure it's easy
to cut. Don';t use pin 27, that's standard blipper. Any other
will do.
: Needs doing
:: Correction, IO Pico is doing this now, so it's not necessary


I need a signal from Pico2 to Pico1. Pico1 can't release the Z80
until Pico2 is ready to go. Pico2 changes the level shifter
direction, so Pico1 can be the ROM until Pico2 is ready to go.
: Needs doing


Add another couple of LEDs to the IO pico so I can see at a glance
if it's responding to IOs. Low priority, but if I have a couple
of GPIOs left this will be handy. Make sure the tracks are easy
to cut so i can reuse the GPIOs if I need to.
: Needs doing


I need to connect the /WAIT signal on the edge connector to GPIO18
on the Pico.
- Done on board #2
: Needs doing on schematic
: Needs doing on PCB



Test points required, bring them out to plated holes:
Test pin on Pico1, use pin 27, needed to trigger scope on particular
                   instruction, like INIR
Test pin on Pico2, use pin 27 here too, although there are more options
Test pin on Pico3, might as well use pin27 here too
ROM_READ_INV (GP8 on Pico1), so I can see when Pico1 is telling Pico2
                             to change DIR
IORQ, RD and WR, make sure they're still available, they're useful
DIR_CHANGE from Pico2, currently pin 28. I need to be able to see when
                       Pico2 is changing the dbus direction.
: All need doing