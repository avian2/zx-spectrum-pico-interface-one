v1.0
====

Transistor Q1 is rotated. Needs turning 90deg anticlockwise.
- Done on board #2

"ROM Acc 3V3" is on the silkscreen, test point was removed.
Same for "GND" just above U4.
- Done on board #2

The direction for the data bus level shifter needs to be
ROM_READ_INV, not /RD.
 - Cut ZXRD track on back of board #2
 - Picked up ROM_READ_INV from OR output (pin 9) and
   connected to DIR (pin 1) on level shifter U4
- Done on board #2
 
Move the GND via from pin 19 on U4, it's under the chip and
I can't get to it. This is /OE.
- Done on board #2

Remove level shifter U2
 - Bridged across gap on board #2
 - Removed on board #2

Remove level shifter U3
 - Bridged across gap on board #2
 - Removed on board #2

All the above were fixed (by hand) in v1.1


v1.1
====

Disconnect the 3V3s for all the Picos. I've got the outputs
of 3 regulators tied together. Separate into 3 supplies.
- Done on v1.2 of the board
- Cut 3V3 track to Pico2 on current board
: Need to cut 3v3 track to pico3 on current board


Change the dbus level shifter direction control from hardware to
software. Wire GPIO27 of Pico2 as an input for the ROM_READ_INV
signal, and GPIO28 as an output to the data bus level shifter's DIR
pin. This will allow the data bus to reverse direction on
memory reads, and also on IO request reads.
- Done on board #2,
- Done on v1.2 of the board


Remove the level shifter U202 which does IORQ, RD and WR.
These signals are permanently ZX->Pico so don't need shifting.
- Bridged on board #1
- Done on v1.2 of the board


I need to connect the /WAIT signal on the edge connector to GPIO18
on the IO Pico.
- Done on board #2
- Done on v1.2 of the board



v1.2
====

Make sure the GPIOs which share the ADC are not used for 5V. IO Pico
has ROM_READ_INV going into GPIO27. I need another level shifter.
I'm out of GPIOs.
- Level shifter has been added on v1.2 schematic
: I won't do it on board #1, adding the level shifter will be too
   difficult.
Make IO PIco GPIO27 an output (it's an ADC GPIO)
- Moved ROM_READ_INV to GPIO15 and ZXWAIT to GPIO27. That makes
  the signal on GPIO27 an output
- Done on board #1 and schematic
Set up the PSRAM connection on SPI0. That's GPIOs 16 to 19.
- Done on board #1 and schematic


Untangle the bus pins on all the Picos. Make databus D0 to D7
in sequence, then address lines. I thought simplifying the layout
process would make things easier, but actually, keeping the
software simple and fast has more benefit.
- Done on schematic, both Pico1 and Pico2
: Won't be doing this on board #1, too distruptive


Have Pico1 tell Pico2 that one of its ports (0xE7 or 0xEF) is on the
address bus. Then Pico2 can do away with 7 address lines.
- Done on board #1
- Signal from Pico1 GPIO27 to Pico2 GPIO13 done on board #1
- Keep A3 in place on Pico2


I need a signal from Pico2 to Pico1. Pico1 can't release the Z80
until Pico2 is ready to go. Pico2 changes the level shifter
direction, so Pico1 can't be the ROM until Pico2 is ready to go.
: Not required. If Pico1 boots slower than Pico2, then
   Pico2 will be running by the time Pico1 releases the Z80.
   I can just put a delay in the Pico1 code. Bit yuk, but I don't
   have the GPIO spare on Pico1.
:: Skip this for now


Add another couple of LEDs to the IO pico so I can see at a glance
if it's responding to IOs. Low priority, but if I have a couple
of GPIOs left this will be handy. Make sure the tracks are easy
to cut so i can reuse the GPIOs if I need to.
: Needs doing
:: No GPIO available, but I could connect an LED to the SPI
   slave enable signal? Check with AM whether that would 
   cause a problem




Test points required, bring them out to plated holes:
Test pin on Pico1, use pin 27, needed to trigger scope on particular
                   instruction, like INIR
Test pin on Pico2, use pin 27 here too, although there are more options
Test pin on Pico3, might as well use pin27 here too
ROM_READ_INV (GP8 on Pico1), so I can see when Pico1 is telling Pico2
                             to change DIR
IORQ, RD and WR, make sure they're still available, they're useful
DIR_CHANGE from Pico2, currently pin 28. I need to be able to see when
                       Pico2 is changing the dbus direction.
: All need doing


v1.3 Final is for fabrication as board #2
