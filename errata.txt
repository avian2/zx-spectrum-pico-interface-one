v1.0
====

Transistor Q1 is rotated. Needs turning 90deg anticlockwise.
- Done on board #2

"ROM Acc 3V3" is on the silkscreen, test point was removed.
Same for "GND" just above U4.
- Done on board #2

The direction for the data bus level shifter needs to be
ROM_READ_INV, not /RD.
 - Cut ZXRD track on back of board #2
 - Picked up ROM_READ_INV from OR output (pin 9) and
   connected to DIR (pin 1) on level shifter U4
- Done on board #2
 
Move the GND via from pin 19 on U4, it's under the chip and
I can't get to it. This is /OE.
- Done on board #2

Remove level shifter U2
 - Bridged across gap on board #2
 - Removed on board #2

Remove level shifter U3
 - Bridged across gap on board #2
 - Removed on board #2

All the above were fixed (by hand) in v1.1


v1.1
====

Disconnect the 3V3s for all the Picos. I've got the outputs
of 3 regulators tied together. Separate into 3 supplies.
- Done on v1.2 of the board
- Cut 3V3 track to Pico2 on current board
: Need to cut 3v3 track to pico3 on current board

Change the level shifter direction control from hardware to
software. Wire GPIO27 of Pico2 as an input for the ROM_READ_INV
signal, and GPIO28 as an output to the data bus level shifter's DIR
pin. This will allow the data bus to reverse direction on
memory reads, and also on IO request reads.
- Done on board #2,

Remove the level shifter U202 which does IORQ, RD and WR.
These signals are permanently ZX->Pico so don't need shifting.
- Bridged on board #1

Untangle the bus pins on all the Picos. Make databus D0 to D7
in sequence, then address lines, then control bus lines. I
thought simplifying the layout process would make things easier,
but actually, keeping the software simple and fast has more
benefit.
: Needs doing
: Won't be doing this on board #1


Connect the last GPIO #27 on the ROM pico to the level shifter's
DIR pin. This is so I can drive the direction with a PIO when the
ROM is read. Not sure if theis will work, so make sure it's easy
to cut.
: Needs doing


