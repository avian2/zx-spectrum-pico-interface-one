v1.0
====

Transistor Q1 is rotated. Needs turning 90deg anticlockwise.
- Done on board #2

"ROM Acc 3V3" is on the silkscreen, test point was removed.
Same for "GND" just above U4.
- Done on board #2

The direction for the data bus level shifter needs to be
ROM_READ_INV, not /RD.
 - Cut ZXRD track on back of board #2
 - Picked up ROM_READ_INV from OR output (pin 9) and
   connected to DIR (pin 1) on level shifter U4
- Done on board #2
 
Move the GND via from pin 19 on U4, it's under the chip and
I can't get to it. This is /OE.
- Done on board #2

Remove level shifter U2
 - Bridged across gap on board #2
 - Removed on board #2

Remove level shifter U3
 - Bridged across gap on board #2
 - Removed on board #2

All the above were fixed (by hand) in v1.1


v1.1
====

Disconnect the 3V3s for all the Picos. I've got the outputs
of 3 regulators tied together. Separate into 3 supplies.
- Done on v1.2 of the board
- Cut 3V3 track to Pico2 on current board
: Need to cut 3v3 track to pico3 on current board


Change the dbus level shifter direction control from hardware to
software. Wire GPIO27 of Pico2 as an input for the ROM_READ_INV
signal, and GPIO28 as an output to the data bus level shifter's DIR
pin. This will allow the data bus to reverse direction on
memory reads, and also on IO request reads.
- Done on board #2,
- Done on v1.2 of the board


Remove the level shifter U202 which does IORQ, RD and WR.
These signals are permanently ZX->Pico so don't need shifting.
- Bridged on board #1
- Done on v1.2 of the board


I need to connect the /WAIT signal on the edge connector to GPIO18
on the IO Pico.
- Done on board #2
- Done on v1.2 of the board



v1.2
====

I need to work out whether Pico1 can tell Pico2 that one of its
ports (0xE7 or 0xEF) is on the address bus.
: Connect Pico1 GPIO27 out to Pico2 GPIO19
:: Then write the PIO program to set GPIO27 if the pattern is
   on the address bus.
::: If that works disconnect A0/1/2/4/5/6/7 from Pico2.
    The new signal plus A3 should be enough.
    This will free up a lot of GPIOs which should make the
    following easier to deal with.

Make sure the GPIOs which share the ADC are not used for 5V. IO Pico
has ROM_READ_INV going into GPIO27. I need another level shifter.
I'm out of GPIOs.
: Needs doing on board #2
:: I won't do it on board #2, adding the level shifter will be too
   difficult.
- Level shifter has been added on v1.2 schematic
: Need to move ROM_READ_INV_3V3 from GPIO8 to GPIO27 on Pico1
  on schematic
:: Can't do it until I have the level shifter
:: Change ROM_READ_GP in fw from GPIO8 to GPIO27 when new board
   is made. This one's already on GPIO27 on io_fw so no change
   required there.
: Need to move A7 from Pico1 GPIO26
:: It can go through the level shifter, but it makes more sense
   to wait until I've untangled the pins (see next item)
: On Pico2 move the ZXWAIT output from GPIO18 to GPIO26
:: Will need to move A7 first


Untangle the bus pins on all the Picos. Make databus D0 to D7
in sequence, then address lines, then control bus lines. I
thought simplifying the layout process would make things easier,
but actually, keeping the software simple and fast has more
benefit.
: Needs doing
: Make sure the GPIOs which share the ADC are not used for 5V
: Won't be doing this on board #1


I need a signal from Pico2 to Pico1. Pico1 can't release the Z80
until Pico2 is ready to go. Pico2 changes the level shifter
direction, so Pico1 can't be the ROM until Pico2 is ready to go.
: Needs doing
:: Not required. If Pico1 boots slower than Pico2, then
   Pico2 will be running by the time Pico1 releases the Z80.
   I can just put a delay in the Pico1 code. Bit yuk, but I don't
   have the GPIO spare on Pico1.
:: Skip this for now


Add another couple of LEDs to the IO pico so I can see at a glance
if it's responding to IOs. Low priority, but if I have a couple
of GPIOs left this will be handy. Make sure the tracks are easy
to cut so i can reuse the GPIOs if I need to.
: Needs doing






Test points required, bring them out to plated holes:
Test pin on Pico1, use pin 27, needed to trigger scope on particular
                   instruction, like INIR
Test pin on Pico2, use pin 27 here too, although there are more options
Test pin on Pico3, might as well use pin27 here too
ROM_READ_INV (GP8 on Pico1), so I can see when Pico1 is telling Pico2
                             to change DIR
IORQ, RD and WR, make sure they're still available, they're useful
DIR_CHANGE from Pico2, currently pin 28. I need to be able to see when
                       Pico2 is changing the dbus direction.
: All need doing